June 21

- Set up project. Name in folder is gilvin-booking-app
- Added Vue and Vite to project stack (added import vue from '@vitejs/plugin-vue') in vite.config.js
- set up inertia, follow documentation next time. The guide skipped a step (server side).
u run composer require inertiajs/inertia-laravel first and then npm install @inertiajs/vue3
- uploaded project to github. using main section for some reason. idk how all this github shit works but it's there so... ok.

June 22
-  I fucked up, slept too much. zz

June 23

- Setup layout pages
- setup tailwindcss

Assignments to do on the other PC
- Drafting 1st Layout Page/Home and overall look of the page. what color should it be? perhaps green/bue
- Drafting 1st DB Table
hehe

June 26
- drafted first DB iteration
- drafted first frontend iteration(low fidelity)

June 27
- added header template
- added body and footer blank template. Website will be 2pages. used h-screen to fill out two pages worth of screen
- GF borrowed my laptop for work emergency. will draft a body concept in my other pc.

June 28
- tried to load pics from localfile using the old way, didnt work

June 29
- resorted to sourcing images online, for now. 
- figured out sourcing images, it's just <img class="object-fill w-3/4 h-3/4 " src="/storage/rayz.png">. Forget those asset and (url) stuff I guess
- background image loaded for homepage content. Used online sourcing for now since above method is kinda unstable
- body content with bg image and shadows added

June 30
- lower body UI update
- found the default storage directory for ur images, it's app/public/storage, NOT app/storage, or app/public.
- 2/3 of Footer done

July 04:
- added raw content for the rightside of the footer
- finalized footer content, now working on the header, home/front page is almost done
- completed landing page. now to work on database while I figure out what pages to add next.
- added new attribute to appointment which is appointment_status, values in mind are pending, on going, rÃŸejected, and done.
- executed "docker compose up" for the project. Tried to mess with its settings since it's using too much ram, will mess with it further tomorrow

July 05
- docker compose setting now primed for less ram usage.
- properly placed a db connection to docker. DB is connection is set
- created model and performed first db migration
- added professional table and messed around with them rollbacks and migrations for a bit

- IMPORTANT NOTE!!! ---------------------------------- showing ext in Windows 10 Settings for the name files is important for dev purposes, it wasted 2days worth of debugging ----------------------------------

July 06
- added first draft for Professional Table DB Seeder
- added working seeder for Professional DB 
- reverted naming scheme for table attirbutes to snake case
- added working seeder and hasmany relationship for professionals and appointments.
- added working seeder and relationship for appointments and users
- IMPORTANT NOTE!! ----------------------------------------------- for migrations, no need to set primary keys manually, laravel conventionally assumes it is 'NameOfTable_id' ----------------------------------
- IMPORTANT NOTE!! ----------------------------------------------- using php artisan tinker, $variable->users(); calls for the relationship between the variable. $variable->users; calls for the objects that are related to the variable ----------------------------------


July 07
- finalize db structure by tomorrow
- to test add_fields (password) feature to professionals and users table

July 10
- added controller factory and migration file for AppointmentRequest
- added migrated dummy DB for AppointmentRequest factory and seeder
- next step... fixed DB services factory depending on profession?
- creating user login page
- a quick UI fix, accidentally doubled "h-screen" in main and home tailwind class
- added a centered div template for login page

July 11
- login form halfway through
- completed login form (frontend part)

July 12
- IMPORTANT NOTE!! w-1/2 mx-auto is another way of centering a div horizontally on page
- authentication (user login) for backend done
- IMPORTANT NOTE!! documentation is ur best friend in the midst of all these bugs due to syntax issues. Inertia documentation saved the day
- odd. useform and const form reactive works for authentication
- will try old syntax for validation errors, to do tomorrow