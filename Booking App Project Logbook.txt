June 21

- Set up project. Name in folder is gilvin-booking-app
- Added Vue and Vite to project stack (added import vue from '@vitejs/plugin-vue') in vite.config.js
- set up inertia, follow documentation next time. The guide skipped a step (server side).
u run composer require inertiajs/inertia-laravel first and then npm install @inertiajs/vue3
- uploaded project to github. using main section for some reason. idk how all this github shit works but it's there so... ok.

June 22
-  I fucked up, slept too much. zz

June 23

- Setup layout pages
- setup tailwindcss

Assignments to do on the other PC
- Drafting 1st Layout Page/Home and overall look of the page. what color should it be? perhaps green/bue
- Drafting 1st DB Table
hehe

June 26
- drafted first DB iteration
- drafted first frontend iteration(low fidelity)

June 27
- added header template
- added body and footer blank template. Website will be 2pages. used h-screen to fill out two pages worth of screen
- GF borrowed my laptop for work emergency. will draft a body concept in my other pc.

June 28
- tried to load pics from localfile using the old way, didnt work

June 29
- resorted to sourcing images online, for now. 
- figured out sourcing images, it's just <img class="object-fill w-3/4 h-3/4 " src="/storage/rayz.png">. Forget those asset and (url) stuff I guess
- background image loaded for homepage content. Used online sourcing for now since above method is kinda unstable
- body content with bg image and shadows added

June 30
- lower body UI update
- found the default storage directory for ur images, it's app/public/storage, NOT app/storage, or app/public.
- 2/3 of Footer done

July 04:
- added raw content for the rightside of the footer
- finalized footer content, now working on the header, home/front page is almost done
- completed landing page. now to work on database while I figure out what pages to add next.
- added new attribute to appointment which is appointment_status, values in mind are pending, on going, rÃŸejected, and done.
- executed "docker compose up" for the project. Tried to mess with its settings since it's using too much ram, will mess with it further tomorrow

July 05
- docker compose setting now primed for less ram usage.
- properly placed a db connection to docker. DB is connection is set
- created model and performed first db migration
- added professional table and messed around with them rollbacks and migrations for a bit

- IMPORTANT NOTE!!! ---------------------------------- showing ext in Windows 10 Settings for the name files is important for dev purposes, it wasted 2days worth of debugging ----------------------------------

July 06
- added first draft for Professional Table DB Seeder
- added working seeder for Professional DB 
- reverted naming scheme for table attirbutes to snake case
- added working seeder and hasmany relationship for professionals and appointments.
- added working seeder and relationship for appointments and users
- IMPORTANT NOTE!! ----------------------------------------------- for migrations, no need to set primary keys manually, laravel conventionally assumes it is 'NameOfTable_id' ----------------------------------
- IMPORTANT NOTE!! ----------------------------------------------- using php artisan tinker, $variable->users(); calls for the relationship between the variable. $variable->users; calls for the objects that are related to the variable ----------------------------------


July 07
- finalize db structure by tomorrow
- to test add_fields (password) feature to professionals and users table

July 10
- added controller factory and migration file for AppointmentRequest
- added migrated dummy DB for AppointmentRequest factory and seeder
- next step... fixed DB services factory depending on profession?
- creating user login page
- a quick UI fix, accidentally doubled "h-screen" in main and home tailwind class
- added a centered div template for login page

July 11
- login form halfway through
- completed login form (frontend part)

July 12
- IMPORTANT NOTE!! w-1/2 mx-auto is another way of centering a div horizontally on page
- authentication (user login) for backend done
- IMPORTANT NOTE!! documentation is ur best friend in the midst of all these bugs due to syntax issues. Inertia documentation saved the day
- odd. useform and const form reactive works for authentication
- will try old syntax for validation errors, to do tomorrow

July 13
- IMPORTANT NOTE!! fixed form issue, no syntax error involved, just needed to add "\App\Http\Middleware\HandleInertiaRequests::class" in Kernel.php
- added error messages 
- added password and email to professionals table. I'm to add professionals into the login feature

July 14 
- configured auth to authenticate Professionals, it disables the authentication for Users though, will debug next session

July 17
- reestablished db connection, account was hacked and docker was bugged, what a shitshow
- IMPORTANT NOTE! - if wsl --shutdown doesnt do anything, u have to disable Control Flow Guard(CFG) in windows 10 settings under Exploit Protection
- stuck in import computed bug making the screen go blank, calling it a day, tired from the hack, sadge.

July 18
- first attempt in conditional rendering with v-if has bug (screen goes blank)
- added "Bug Fixes" text document in project repository, will report bug fixes there and how I fixed each bugs
- added flash success config in HandleInertiaRequests
- fixed blank page bug on conditional rendering
- added Link href section and fixed blank page bug when adding Link href section
- fixed login bug where validation errors appear even when credentials enetered are correct
- added working authenticator for professional guard in auth controller, will test further
- managed to get the authenticated professional guard to reflect on vue, but logout button doesn't work, will test further
- conditioner for guard added, will test further tomorrow, and will add user registration as well

July 19
- Fixed the v-if="prof" bug returning an empty value instead of null which led to Homepage having a blank "Sign-In"button
- added working conditional rendering for which Guard to logout in AuthController
- Login and Logout feature for Professionals and fixed !

July 20
- added successful flash message and fixed to bottom right
- installed alpine to setTimeout on flash messages to disappear after 3 seconds
- added frontend part of register page 
- added backend part of register page, flash message not appearing before page is refresh found

July 21
- added frontend and backend(incomplete) part of professional register page
- added full working feature for registering professionals

July 22
- added first_names to handleinertia request  and changed main layout to reflect a logged in user's firstname and refers to its profile link 
- established route + template for userprofile and controller for Users Model
- downloaded template for user profile format
- added incomplete template for user profile, kind of a hard one, will tweak more tomorrow

July 24
- added label with input type for template below
- added Appointment, messages and requests circle button for user profile page
- added photo section for user profile and replaced buttons with Upload new image and reset password
- completed front end part of user Profile, backend parts of it To do next shifts

July 25
- mum's bday today, figured I take a short break for her today

July 26
- felt tired, sorry, no important commits for today

July 27
- added bg image with inherited properties for user profile
- indentions for user profile page
- added variable to userprofile controller to reflect current authenticated user
- bug found, no longer reflects Test User email when visiting UserProfile Page. Maybe adding auth middleware will fix

July 28
- added feature which user profile has reflected names and email on input box
- completed feater which user profile has reflect names and email on input box
- added auth to userProfile and named a route to redirect to when not logged in
- established route to UserController for edit form
- added USER profile edit feature, delete is not necessary for now, will add Professional Profile Edit feature next

July 29
- added controller for Professional db model/table
- added working routes for professional edit
- added working backend part for editing professional user
- fixed bug where new users and professionals cannot login despite entering password correctly
- added delete feature for professionals

August 1
- fixed test example not having "password" faker
- fixed bug where it is not possible to delete data that are parents to foreign tables
- added user delete feature

August 2
- fixed home page bg image missing, (used image link online died)
- added more services to proftestexample dbseeder for testing
- update professional profile in which he is able to see (R in CRUD) his list of services
- created a test page for route model binding and prop testing. works so far, will do more tests next shift

August 3
- attempt to modal prepped, needs flowbite installed to do next shift

August 8
- installed flowbite, tested modal and it's working
- added front-end part modal of adding services

August 9
- updated add service modal
- added layout for service modal
- added backend and working professional service create feature

August 12
- added modal on delete feature for professional profile, to be added next to users
- fixed a misroute where test editProfile
- added backend and frontend (incomplete) solution for click to edit bio, figuring out how to place the current bio as the value in the form next

August 14
- backend for bio editing done
- figured out code snippet to imitate northspyre's click to edit feature
- added click to edit on to professional profile's bio, but it has an issue where components do not inherit props from parent and I am still unable to put two forms in one vue component

August 15
- debugged bio form and professional info form in 1 vue component
- did some ui improvements on the bio form and professional profile
- UI improvements for userprofile, to create its CRUD tomorrow

August 17
- added bio field to users table, also reflectson userProfile
- added bio form to UserProfile, to test more tomorrow, got a weird syntax bug

August 18
- added backend and functioning feature to edit bio form in userProfile
- added deleted modal for userProfile
- added requests column to appointments table, on the long term this should be inherited from appointment_requests
- added a scrollable modal on test page, to experiment on it further

August 19
- moved modal scroll bar to center instead of whole page
- added appoint box component and placed it in test modal. Will loop this on existing data next shift

August 22
- reflected requests in test page, will try to loop it in a modal
- built a db query for appointment requests that reflects the request and consultee info
- added note to controller for more queries to test out next shift

August 23
- built a loop and if arguement inside an inertiajs.vue page to reflect each appointment request's consultee
- added appointment requests that appear as looped modals
- finalized ui for appointment requests and migrated it to main professional page
- added syntax for href interpolation for vue js done but route is not working, will test next shift


August 24
- added fixed route for reject request
- fixed backend for reject request where it only updates requests with "1" id
- requests modal now only shows pending modals, also fixed appointmentrequests controller where it only updates requests with a certain user id
- added a fully functional approve request feature

August 28
- added pagination backend to professional controller 
- added pagination frontend to requests, but it doesn't appear on as a modal on page 2
- added code snippets to test for in trying to persist modal after clicking pagination links

August 30
- replaced import inertia with import router as it is the new syntax for it, all attempts to debug modal persistence failed.

August 31
- added a testmodal that passes props from parent profile Jesos Krayst this modal persistence is fucking with me
- successfully packed pagination link modal in a component
- finally preserved modal state when clicking the pagination links, turns out I only had to add "preserve-state" on the end of the pagination component


Sept 1
- added target="_blank" to reject and confirm request to persist modal to stay (this opens a new tab instead)
- renamed testmodal component for request to profRequestsModal