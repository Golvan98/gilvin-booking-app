CURRENTLY DOING : 
Current Phase: Deployment and UI improvements to run side by side (FINAL)

NOTE: Flex's class w- and h- might rely on its parent grid size, to test more of this
NOTE: to apply sm, md and lg, there must be specifications for each size

- welp, cant register to heroku for some reason, until u find a source for deployment, it's all UI imrpovements for today


Current UI Task
- when clicking law/engineering/medical, visit this professionals page with preloaded filters
- modal issue reference for a fix that might work https://github.com/themesberg/flowbite/issues/160 (also, using other plugins instead of vite might work for this)

UI DONE
- working href links, and trimmed homepage content


Optional Features
- messaging (optional)
- soft delete users(optional)

UI Improvements (FINAL). There really is a problem with ur UI when zoomed in or zoomed in/out... (ACTUALLY NOPE every website is shit when zoomed in/out, Just size appropriations needed)
- persist the modal when u accept/reject requests (hard one, this is left for the optimizing section)
- confirm button needs to be redone, required input error message doesnt work while closing modal
- check if it's possible to approve request and refresh paginated modal page at the same time
- placeholder for form to be :value request data
- format date time to readable (this can be done frontend or backend)
- flash messages and modals not appearing unless page is refreshed (THIS IS HUGE, FIX THIS BUG)
- auto adjust when browser is shortened (final)
- for that value placeholder thingy, try that if edit modal is being executed OR u can call its value from that @click="Selected.value" 

DONE
- Validation error message for wrong input in login forms
- Use Separate multiple guard for User and Professionals (This was very fucking time consuming and hard for me)
- Log out feature for User and Professionals 
- Successful Flash Messages
- Working Register with Auth
- Register Professional Side ((Just use separate Register page for User and Professional to avoid confusion, or a dropdown select,
 makes sense to separate them after all)
- Frontend part of User Profile
- Backend part of User Profile (Editing)
- add a feature in register where you can select to register as a user or a professional
- professional CRUD
- User Delete
- profile for Professionals
- modal on delete
- feature in which a professional gets to add his list of services too (professional->services CRUD)
- bio edit presented the same way in Northspyre wherein u just click its texts and u can edit em, can also add a close button on the right side of bio
- user profile CRUD (just an imitation of professional profile)
- data pagination for vuejs
- added Delete method for appointment requests (CRUD For requests now complete)
- appointment requests CRUD
- cleanup ur modals (group em)
- appointments on professional side
- converts request to appointment mutator when approved
- number to reflect how many request/appointments there currently are for the current user
- upload photo profile professional side
- UI for User/Professional profile 
- Route Model Binding in which a user can view other profiles not through HandleInertiaRequests (very important)
- when you're done with viewUSER, remove settings from the admin part of User/Prof, put it onto the home or something
- List of professionals UI, image reference for it sent
- send request for application (user to prof function only, and a a modal would be nice)
- lapsed status db trigger if appointment has passed by
- notifications (When watching Piotr Udemy's mark as read feature, there might be some code that u needed there
where the page refreshes after you click "mark as read" (nope, just a redirect and v-if condition that made it disappear)
- mark as read Notifications for Users
- Notification for when request is rejected and sent 
- Notification for the Professional side? Like when a user sends a req, the professional is notified 
- in the Professional's notification, add an href link to user 
- mark as read Notifications for Professionals(route already created for this, it needs another single action controller like the one used for User
- notification when appointment is cancelled 
- add a view appointment option for each appointment notification
- Add an href link to the newly made appointment on the Request Accepted notification (v-for appoinntment 
- Add an href link to the newly made appointment on the Request Rejected notification
- pagination for notifications (should be easy)
- modal to view request from notifications page
- filtering for list of professionals

UI Tasks Done
- navbar to auto adjust when shrinked




